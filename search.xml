<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>达梦数据库DCA培训总结</title>
      <link href="/2024/02/25/%E8%BE%BE%E6%A2%A6%E6%95%B0%E6%8D%AE%E5%BA%93DCA%E5%9F%B9%E8%AE%AD%E6%80%BB%E7%BB%93/"/>
      <url>/2024/02/25/%E8%BE%BE%E6%A2%A6%E6%95%B0%E6%8D%AE%E5%BA%93DCA%E5%9F%B9%E8%AE%AD%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="达梦数据库DCA培训问题总结"><a href="#达梦数据库DCA培训问题总结" class="headerlink" title="达梦数据库DCA培训问题总结"></a>达梦数据库DCA培训问题总结</h1><p>最近参加了达梦E学举办的——达梦数据库DCA培训考试，在学习过程以及考试期间，曾遇到了一些问题。本文将其中的一些典型问题和知识点加以总结，希望能对大家学习达梦数据库有一定的帮助作用。</p><h2 id="一、安装中遇到的问题"><a href="#一、安装中遇到的问题" class="headerlink" title="一、安装中遇到的问题"></a>一、安装中遇到的问题</h2><p>根据老师提供的指导文档，实验时需要安装VMWare虚拟机以及Linux操作系统。本文以Kylin操作系统为例，在其中安装DM8。我们创建好规划的安装路径&#x2F;dm8、安装用户dmdba以及所属组dinstall，并执行<code>chown dmdba:dinstall -R /dm8</code>进行授权，然后就可以进行数据库的安装操作了。下面列举了安装过程中遇到的一些典型的问题及解决方法。</p><h3 id="1-虚拟机蓝屏问题"><a href="#1-虚拟机蓝屏问题" class="headerlink" title="1.虚拟机蓝屏问题"></a>1.虚拟机蓝屏问题</h3><p>在安装操作系统之后，虚拟机可能出现蓝屏问题，遇到这种情况可以前往虚拟机首页，编辑虚拟机设置，去掉勾选的打印机设备自动连接等选项加以解决。如下图1-1所示：<br><img src="https://img-blog.csdnimg.cn/1082efaeb7e3489699796ea854564c67.png" alt="图1-1 虚拟机蓝屏问题解决"><br>图1-1 虚拟机蓝屏问题解决</p><h3 id="2-图形化界面调用失败问题"><a href="#2-图形化界面调用失败问题" class="headerlink" title="2.图形化界面调用失败问题"></a>2.图形化界面调用失败问题</h3><p>图形化调用失败问题会是初学者所遇到的主要问题。在使用图形化方式安装达梦数据库或者安装后运行DM8图形化界面时，均有可能出现图形化调用失败的问题。此时可以按照以下步骤解决：</p><p>(1) 在终端执行命令：<code>xhost +</code></p><ul><li>如果执行xhost +失败，原因可能是由于用户频繁切换所导致，可关闭当前会话，重新打开一个终端后再次执行该操作。</li></ul><p>(2) 以root身份执行命令：<code>echo $DISLAY</code></p><ul><li>该命令可以查看root用户下的DISPLAY变量值，同时记下该值。</li></ul><p>(3) 切换到安装DM8的用户下，执行命令：<code>export DISPLAY=:0.0</code>；</p><ul><li>其中:0.0为作者在步骤(2)中查询的值，读者应替换为自己所查出的值，需要注意的是不能忽略掉冒号。</li><li>同时，如果是远程ssh连接，需要在哪台设备上调出图形化窗口，则需要将其ip加入命令中，如：<code>export DISPLAY=192.168.0.10:0.0</code>；</li></ul><p>(4) 需要注意的是，export命令只在当前会话内生效，如果关闭当前会话，在新窗口中需要再次执行上面的命令才能生效。</p><h3 id="3-tmp目录空间大小不足问题"><a href="#3-tmp目录空间大小不足问题" class="headerlink" title="3.tmp目录空间大小不足问题"></a>3.tmp目录空间大小不足问题</h3><p>在数据库安装过程中，由于分配给操作系统的临时目录磁盘空间不足，可能会导致安装报错。如图1-2所示：</p><p><img src="https://img-blog.csdnimg.cn/8d398ab62a1d42a3ab2832625ee61e87.png" alt="图1-2 tmp目录不足报错"><br>图1-2 tmp目录不足报错</p><p>解决该问题的步骤如下：</p><p>(1) 以操作系统管理员身份查看当前tmp目录大小，执行命令：<code>df -h /tmp</code>；</p><p>(2) 以操作系统管理员身份创建其他空间大小足够的临时目录，本文以&#x2F;opt&#x2F;tmp为例：<code>mkdir /opt/tmp</code>；</p><p>(3) 以操作系统管理员身份修改用户权限：<code>chown dmdba:dinstall /opt/tmp</code>；</p><p>(4) 以dmdba身份指定临时目录：<code>export DM_INSTALL_TMPDIR=/opt/tmp</code>；</p><h2 id="二、创建实例相关问题"><a href="#二、创建实例相关问题" class="headerlink" title="二、创建实例相关问题"></a>二、创建实例相关问题</h2><p>在创建实例的过程中，大家也会遇到一些典型问题，这些问题也特别容易被大家忽视，从而引起一些不必要的麻烦。以下列举了一些在创建实例的过程中可能遇到的问题。</p><p><strong>1. 创建实例时指定日志文件大小</strong></p><p>创建实例成功后，若需要再次对日志大小进行修改，将只能改大不能改小，用户创建实例时建议不要设置过大的日志文件大小。</p><p><strong>2. 操作系统用户身份验证</strong></p><p>DM8默认没有开启操作系统用户身份验证模式。如果开启了操作系统用户验证方式，可以使用操作系统用户身份验证模式登录，用户应牢记设置的用户密码。</p><p><strong>3. 实例启停方式</strong></p><p>实例的启停方式有两种，一种是使用在成功创建实例服务后在达梦数据库安装目录下的bin目录内生成的实例服务脚本进行启动，另一种是使用系统自带的systemctl命令进行启动。</p><p>(1) 使用bin目录下命令，操作DM8下相应实例服务，如：<code>/dm8/bin/DMTESTSERVER start/stop/status</code>；</p><p>(2) 使用系统命令操作DM8相应实例服务，如：<code>systemctl DMTESTSERVER stop/start/status</code>；</p><p>上述两种方式都可以对实例服务进行操作，但是二者<strong>不可混用</strong>，应当<strong>使用同一组命令对同一实例服务</strong>进行启停操作。</p><p><strong>4. 使用命令创建实例中的问题</strong></p><p>(1) 使用 dminit命令创建数据库实例后，系统不会自动注册实例服务，不能直接用systemctl start 启动数据库服务，应当运行达梦数据库安装目录下的bin目录中的dmserver程序进行启动，如：<code>/dm8/bin/dmserver /dm8/data/DMTEST/dm.ini</code>；</p><p>(2) 可以调用达梦数据库安装目录（&#x2F;dm8）下的tool目录中的dbca.sh来启动图形化数据库配置管理工具，注册数据库服务；</p><p>(3) 可以通过命令行方式注册数据库服务，命令行方式脚本程序所在路径为：&#x2F;dm8&#x2F;script&#x2F;root&#x2F;dm_service_installer.sh，执行如下命令可以注册数据库服务：<code>./dm_service_installer.sh -t dmserver -p DMDASVR -dm_ini /dm8/data/DMDA/dm.ini</code>，如图2-1所示：<br><img src="https://img-blog.csdnimg.cn/ad67cd97223c4c7585e61455ac180715.png" alt="图2-1 注册数据库服务"><br>图2-1 注册数据库服务</p><h2 id="三、其他问题"><a href="#三、其他问题" class="headerlink" title="三、其他问题"></a>三、其他问题</h2><h4 id="1-防火墙相关问题"><a href="#1-防火墙相关问题" class="headerlink" title="1. 防火墙相关问题"></a>1. 防火墙相关问题</h4><p>当启动数据库服务后，通过其他设备连接到该设备中的数据库时，如果无法连接到数据库，则有可能是因为启用防火墙而导致的无法访问数据库。可以通过如下方式进行解决：</p><p><strong>(1) 直接关闭防火墙</strong></p><p>可以通过关闭防火墙来解决该问题，但是对整体系统来讲会有一定的安全隐患，因此不建议在实际工程项目中使用该方法。</p><p><strong>(2) 在防火墙中开放端口</strong></p><p>首先，依次执行以下命令，如图3-1所示：</p><pre><code>a) systemctl stop firewalld；b) systemctl start firewalld；c) firewall-cmd --zone=public --add-port=5236/tcp --permanent；</code></pre><p><img src="https://img-blog.csdnimg.cn/42416268acdc4e4b852480d1885206f7.png" alt="图3-1 开放防火墙中某端口"><br>图3-1 开放防火墙中某端口</p><p>最后，重载与查看防火墙当前端口状态，依次执行以下命令，如图3-2所示：</p><pre><code>a) firewall-cmd --reload；b) firewall-cmd --list-ports；</code></pre><p><img src="https://img-blog.csdnimg.cn/6615f30294144b788b0ec3409be41008.png" alt="图3-2 重载防火墙配置与查看开放端口"><br>图3-2 重载防火墙配置与查看开放端口</p><h4 id="2-调用图形化界面报错"><a href="#2-调用图形化界面报错" class="headerlink" title="2.调用图形化界面报错"></a>2.调用图形化界面报错</h4><p>在调用manager等图形化界面时，会报错（核心已转储），如下图4-1所示，其原因是对变量DISPLAY值未正确设置，可以参照标题一中的第2点，对图形化界面的调用进行重新设置。<br><img src="https://img-blog.csdnimg.cn/c800a38a546049cb857cec8b59ab5a00.png" alt="图4-1 调用图形化界面失败"><br>图4-1 调用图形化界面失败</p><h4 id="3-对数据库进行归档操作后报错"><a href="#3-对数据库进行归档操作后报错" class="headerlink" title="3.对数据库进行归档操作后报错"></a>3.对数据库进行归档操作后报错</h4><p>对数据库进行归档操作后，再次对数据库进行操作时，可能出现（归档点不连续）的问题，可以直接在manager管理界面内执行：checkpoint(100)，即可解决该问题。</p><h4 id="4-建表操作后，点击左侧导航栏时报错"><a href="#4-建表操作后，点击左侧导航栏时报错" class="headerlink" title="4.建表操作后，点击左侧导航栏时报错"></a>4.建表操作后，点击左侧导航栏时报错</h4><p>在新建数据表后，再次点击管理页面左侧导航栏时，会出现报错提醒。这时，需要在管理工具界面的选项设置中，勾选上与导航树有关的相应设置，如下图3-3所示：<br><img src="https://img-blog.csdnimg.cn/c2556cff59564234b16234f968268147.png" alt="图3-3 解决左侧导航栏点击报错问题"><br>图3-3 解决左侧导航栏点击报错问题</p><h4 id="5-联机日志相关问题"><a href="#5-联机日志相关问题" class="headerlink" title="5.联机日志相关问题"></a>5.联机日志相关问题</h4><p>达梦数据库的联机日志，主要存放数据库的REDO信息，默认是两个联机日志文件，循环使用。并且联机日志文件不支持手工切换，由系统自动维护，且不提供对外的删除接口。除此之外，如果需要修改日志文件大小，应当注意的是，在实例创建成功后，已经创建好的日志文件只能改大不能改小。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Cron表达式</title>
      <link href="/2024/02/25/Cron%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2024/02/25/Cron%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="Cron表达式"><a href="#Cron表达式" class="headerlink" title="Cron表达式"></a>Cron表达式</h1><p>接触cron表达式是在Sping boot定时任务中，cron表达式代表了一个时间，可在定时任务中代表任务的执行执行周期。</p><h2 id="组成"><a href="#组成" class="headerlink" title="组成"></a>组成</h2><p>cron表达式一般由5个或者6个空格组成，组成6或者7个域，每个与中由一些数字&#x2F;符号按照一定规则组成。这组字符串中表达了时间的信息。</p><p>每个域分别代表一个时间单位，如：</p><pre><code>A B C D E F   -&gt;   秒 分 时 日 月 星期A B C D E F G   -&gt;   秒 分 时 日 月 星期 年</code></pre><p><font color=red>A表示秒，B表示分，C表示小时，D表示日，E表示月，F表示星期，G表示年</font><br>在日常的使用中，年为单位执行任务不常用，因此G也可以省略</p><h2 id="常用符号"><a href="#常用符号" class="headerlink" title="常用符号"></a>常用符号</h2><table><thead><tr><th>符号</th><th>含义</th></tr></thead><tbody><tr><td>x&#x2F;y</td><td>x代表开始值，y是步长，即从x开始，每y执行一次</td></tr><tr><td>A-B</td><td>从时间段A到B</td></tr><tr><td>星期</td><td>星期英文前三个字母大写，如星期一 MON</td></tr><tr><td>L</td><td>Last，表示最后</td></tr><tr><td>?</td><td>不说明是星期几，用问号代替</td></tr><tr><td>a,b</td><td>逗号表示列表值</td></tr><tr><td>*</td><td>每</td></tr></tbody></table><h2 id="程序中调用方式"><a href="#程序中调用方式" class="headerlink" title="程序中调用方式"></a>程序中调用方式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span>      </span><br><span class="line"><span class="meta">@EnableScheduling</span>   </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SaticScheduleTask</span> &#123;</span><br><span class="line">    <span class="meta">@Scheduled(cron = &quot;0/5 * * * * ?&quot;)</span></span><br><span class="line">    <span class="comment">// 或直接指定时间间隔，例如：5秒</span></span><br><span class="line">    <span class="comment">// @Scheduled(fixedRate=5000)</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">configureTasks</span><span class="params">()</span> &#123;</span><br><span class="line">        . . .</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>@Configuration</code>表示这是一个配置类，兼备Component的效果。</li><li><code>@EnableScheduling</code>表示开启定时任务。</li><li><code>@Scheduled(cron = &quot;0/5 * * * * ?&quot;)</code>表示添加定时任务——每隔五秒触发事件。</li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1949年10月1日下午3点，开国大典时间</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">15</span> <span class="number">1</span> <span class="number">10</span> * <span class="number">1949</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 每2小时第30分0秒执行</span></span><br><span class="line"><span class="number">0</span> <span class="number">30</span> */<span class="number">2</span> * * ?</span><br><span class="line"></span><br><span class="line"><span class="comment">// 每个月最后一天的1到5点，然后这几个点内的每个0分1秒，0分3秒，0分5秒各执行一次。</span></span><br><span class="line"><span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span> <span class="number">0</span> <span class="number">1</span>-<span class="number">5</span> L * ?</span><br></pre></td></tr></table></figure><h2 id="Linux中的crontab命令"><a href="#Linux中的crontab命令" class="headerlink" title="Linux中的crontab命令"></a>Linux中的crontab命令</h2><blockquote><p>可参考 <a href="https://www.runoob.com/linux/linux-comm-crontab.html">菜鸟教程：Linux crontab 命令 </a></p></blockquote><p>在Linux中的crontab命令与上述有所不同，更加精简，由五部分+命令（command）组成</p><pre><code>A B C D E command</code></pre><p><font color=red>其中 A 是表示分钟，B 表示小时，C 表示一个月份中的第几日，D 表示月份，E 表示一个星期中的第几天</font></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 每一分钟执行一次 /bin/ls</span></span><br><span class="line">* * * * * /bin/ls      </span><br><span class="line"></span><br><span class="line"><span class="comment">// 在 12 月内, 每天的早上 6 点到 12 点，每隔 3 个小时 0 分钟执行一次 /usr/bin/backup</span></span><br><span class="line"><span class="number">0</span> <span class="number">6</span>-<span class="number">12</span>/<span class="number">3</span> * <span class="number">12</span> * /usr/bin/backup    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 周一到周五每天下午 5:00 寄一封信给 alex@domain.name</span></span><br><span class="line"><span class="number">0</span> <span class="number">17</span> * * <span class="number">1</span>-<span class="number">5</span> mail -s <span class="string">&quot;hi&quot;</span> alex<span class="meta">@domain</span>.name &lt; /tmp/maildata</span><br><span class="line"></span><br><span class="line"><span class="comment">// 每月每天的午夜 0 点 20 分, 2 点 20 分, 4 点 20 分....执行 echo &quot;haha&quot;：</span></span><br><span class="line"><span class="number">20</span> <span class="number">0</span>-<span class="number">23</span>/<span class="number">2</span> * * * echo <span class="string">&quot;haha&quot;</span></span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ol><li><a href="https://blog.csdn.net/sunnyzyq/article/details/98597252">一看就懂：cron 表达式</a></li><li><a href="https://zhuanlan.zhihu.com/p/450180727">【周一通勤电台】cron表达式，看这篇就够了</a></li><li><a href="https://cron.qqe2.com/">在线Cron表达式生成器</a></li><li><a href="https://www.runoob.com/linux/linux-comm-crontab.html">菜鸟教程：Linux crontab 命令 </a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring Bean 相关记录</title>
      <link href="/2024/02/20/Spring-Bean-%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/02/20/Spring-Bean-%E7%9B%B8%E5%85%B3%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="创建Bean的六种方式"><a href="#创建Bean的六种方式" class="headerlink" title="创建Bean的六种方式"></a>创建Bean的六种方式</h2><blockquote><p><a href="https://www.cnblogs.com/lgjlife/p/11060570.html">参考：https://www.cnblogs.com/lgjlife/p/11060570.html</a></p></blockquote><ol><li>Spring XML 配置<ul><li><code>&lt;component-scan /&gt;</code>相关扫描标签</li></ul></li><li>@Component  @Service  @Controller  @Repository<ul><li>使用<code>@Component</code>扫描或者在启动类的根路径或者子路径下</li></ul></li><li>@Bean</li><li>@Import</li><li>ImportSelector、ImportBeanDefinitionRegistrar接口 + @Import创建EnableXXX注解</li><li>创建对象手动注入 通过DefaultListableBeanFactory注入</li></ol><h2 id="Bean-注解全解析"><a href="#Bean-注解全解析" class="headerlink" title="@Bean 注解全解析"></a>@Bean 注解全解析</h2><blockquote><p><a href="https://www.cnblogs.com/cxuanBlog/p/11179439.html">参考：https://www.cnblogs.com/cxuanBlog/p/11179439.html</a></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>SQL时间戳区间问题</title>
      <link href="/2024/02/20/SQL%E6%97%B6%E9%97%B4%E6%88%B3%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/"/>
      <url>/2024/02/20/SQL%E6%97%B6%E9%97%B4%E6%88%B3%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL-时间戳区间问题"><a href="#SQL-时间戳区间问题" class="headerlink" title="SQL 时间戳区间问题"></a>SQL 时间戳区间问题</h1><h2 id="问题举例"><a href="#问题举例" class="headerlink" title="问题举例"></a>问题举例</h2><p>如果Table表中有数据</p><table><thead><tr><th>name</th><th>time</th></tr></thead><tbody><tr><td>张三</td><td>2022-01-01 00:00:00</td></tr><tr><td>李四</td><td>2022-01-01 08:00:00</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">Table</span> <span class="keyword">where</span> <span class="type">time</span> <span class="keyword">between</span> <span class="string">&#x27;2022-01-01&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;2022-01-01&#x27;</span>；</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="keyword">or</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">Table</span> <span class="keyword">where</span> <span class="type">time</span> <span class="operator">&gt;=</span> <span class="string">&#x27;2022-01-01&#x27;</span> <span class="keyword">and</span> <span class="type">time</span> <span class="operator">&lt;=</span> <span class="string">&#x27;2022-01-01&#x27;</span>；</span><br></pre></td></tr></table></figure><p>查询出来的数据会是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">张三 2022-01-01 00:00:00</span><br></pre></td></tr></table></figure><p>不会有李四数据的原因是，如果时间信息中不添加时分秒的信息，则默认的查询范围是从当天的 00:00:00 到 当天的 00:00:00。</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>可以通过添加时分秒信息进行查询，如</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">Table</span> <span class="keyword">where</span> <span class="type">time</span> <span class="keyword">between</span> <span class="string">&#x27;2022-01-01 00:00:00&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;2022-01-01 23:59:59&#x27;</span>；</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="keyword">or</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">Table</span> <span class="keyword">where</span> <span class="type">time</span> <span class="operator">&gt;=</span> <span class="string">&#x27;2022-01-01 00:00:00&#x27;</span> <span class="keyword">and</span> <span class="type">time</span> <span class="operator">&lt;=</span> <span class="string">&#x27;2022-01-01 23:59:59&#x27;</span>；</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2023/10/20/test/"/>
      <url>/2023/10/20/test/</url>
      
        <content type="html"><![CDATA[<h2 id="TEST"><a href="#TEST" class="headerlink" title="TEST"></a>TEST</h2><ol><li>hexo g </li><li>hexo d</li><li>hexo new <title></li><li>.&#x2F;source&#x2F;_posts</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/10/15/hello-world/"/>
      <url>/2023/10/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
